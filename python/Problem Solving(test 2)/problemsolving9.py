# -*- coding: utf-8 -*-
"""ProblemSolving9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HXBO6M-Bv5ytFk2IaEBlAGxzXjW0BC06
"""

#encapsulation is the process of keeping things hidden and accesible only to a particular class.
class base:
  def __init__(self):
    #protected member
    self._a=2
class derived(base):
  def __init__(self):
    base.__init__(self)
    print("calling protected member",self._a)
    self._a=3
    print("modified protected member",self._a)
ob=derived()
oc=base()
#can be accessed but should not be due to convention
print("accesing protected member of derived class",ob._a)
print("accesing protected member of base class",oc._a)